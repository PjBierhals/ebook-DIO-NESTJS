// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  // --- MUDANÇA AQUI: Para relação muitos-para-um ---
  roleId    String // Campo para armazenar o ID da Role
  role      Role      @relation(fields: [roleId], references: [id]) // Relação para a Role
  // --------------------------------------------------
  posts     Post[]
  comments  Comment[]
}

model Role {
  id          String       @id @default(uuid())
  name        String       @unique
  permissions Permission[] @relation("RolePermissions")
  // --- MUDANÇA AQUI: Para relação um-para-muitos ---
  users       User[]       // Uma Role pode ter muitos Users
  // --------------------------------------------------
}

model Permission {
  id    String @id @default(uuid())
  name  String @unique
  roles Role[] @relation("RolePermissions")
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String
  authorId  String
  author    User     @relation(fields: [authorId], references: [id])
  comments  Comment[]
  createdAt DateTime @default(now())
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  postId    String
  authorId  String
  post      Post     @relation(fields: [postId], references: [id])
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now())
}